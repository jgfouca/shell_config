[user]
        name = James Foucar
        email = jgfouca@sandia.gov
[branch]
        autosetuprebase = always
        rebase = true
[color]
        ui = true

[alias]
        # Removes *all* untracked files, including ignored files
        super-clean-repo = "!f() { git ls-files --others | cut -f2 | sort -u ; }; /bin/rm -fv `f`"

        # Simple update
        pull-subs = "submodule foreach git pull --rebase"

        # Simple init
        init-subs = "!git submodule init && git submodule update" && git submodule foreach git checkout master

        # Checkout with submodules (for detaching HEAD, use superrepo-branch-switch to change branches)
        checkout-subs = "!f() { git checkout $1; git submodule update --checkout --recursive; }; f"
        clone = =

        # Simple sub update
        su = "submodule update --init --recursive"

        # Easy status
        s = "status"

        # Easy pull
        p = "pull"

        # Easy push w/ upstream tracking
        pu = "push -u origin HEAD"

        # Easy branch
        b = "branch"

        # Easy checkout
        co = "checkout"

        # Easy fetch
        f = "fetch"

        # Easy merge
        m = "merge --no-ff"

        # Easy reuse commit msg
        ru = "commit --amend --reset-author -c"

        # Easy first-parent log
        lfp = "log --first-parent"

        # Prune local branches that were deleted remotely
        prune-local = "!f() { git fetch origin --prune; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d ; }; f"

        clean-merged = "!sh -c 'git branch --merged master | grep -v master | xargs -n 1 git branch -d'"

        clean-merged-dev = "!sh -c 'git branch --merged develop | grep -v develop | xargs -n 1 git branch -d'"

        find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
        show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"

[http]
        sslVerify = false
        proxy = http://proxy.sandia.gov:80
[push]
        default = simple
[merge]
        summary = true
        renamelimit = 99999
[core]
        editor = emacs -nw
        gitproxy=proxy.sandia.gov:80
#        no_proxy=localhost,.sandia.gov,localhost,127.0.0.1,::1
